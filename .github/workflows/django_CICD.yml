name: Django CI/CD
on:
  push:
    branches: ["main"]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install django djangorestframework drf-yasg
        working-directory: aiServer

  upload:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Create secrets.json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "secrets.json"
          json: ${{ secrets.SECRETS }}
          dir: 'aiServer'
      
      - name: Upload Code to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ubuntu
          EC2_KEY: ${{ secrets.EC2_KEY }}
        run: |
          echo "${{ secrets.EC2_KEY }}" > key.pem
          chmod 400 key.pem
          
          ssh -o StrictHostKeyChecking=no -i key.pem $EC2_USER@$EC2_HOST << EOF
            mkdir -p /home/ubuntu/aiServer/logs
          EOF
          
          scp -o StrictHostKeyChecking=no -i key.pem -r ./aiServer $EC2_USER@$EC2_HOST:/home/ubuntu/
          
          rm key.pem

  deploy:
    runs-on: ubuntu-latest
    needs: upload
    steps:
      - name: Deploy Code to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ubuntu
          EC2_KEY: ${{ secrets.EC2_KEY }}
        run: |
          echo "${{ secrets.EC2_KEY }}" > key.pem
          chmod 400 key.pem
          
          ssh -o StrictHostKeyChecking=no -i key.pem $EC2_USER@$EC2_HOST << EOF
            cd /home/ubuntu/aiServer
            
            python3 -m venv venv
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
            
            if pgrep gunicorn; then
              pkill gunicorn
            fi
            
            nohup gunicorn --bind 0.0.0.0:8000 aiServer.wsgi:application \
              --workers 3 \
              --timeout 120 \
              --access-logfile logs/gunicorn-access.log \
              --error-logfile logs/gunicorn-error.log &
            
            sudo service nginx restart
          EOF
          
          rm key.pem
